# made by _dialed#0001
# pls give cred

options:
	key: CHANGE THIS TO YOUR KEY
	priceUpdateMsg: "Stock Prices Updated | do /stocks to check them out!"
	BuyStockMsg: "You have succesfully bought %{amount::%uuid of player%}% %loop-value% stock"
	SellStockMsg: "You have sold %{amount::%uuid of player%}% %loop-value% stock"
	insufficentBal: "You have an insufficent balance to buy this much stock"
	insufficentStock: "You do not have that much stock"

on load:
	clear {stocks::*}
	add "TSLA" to {stocks::*}
	add "AAPL" to {stocks::*}
	add "NVDA" to {stocks::*}
	add "AMZN" to {stocks::*}
	add "GOOGL" to {stocks::*}

on first join:
	set {wallet::TSLA::%uuid of player%} to 0
	set {wallet::AAPL::%uuid of player%} to 0
	set {wallet::NVDA::%uuid of player%} to 0
	set {wallet::AMZN::%uuid of player%} to 0
	set {wallet::GOOGL::%uuid of player%} to 0

command /stockrun:
	permission: stock.reload
	trigger:
		loop {stocks::*}:
			send a request to "https://realstonks.p.rapidapi.com/%loop-value%" with headers "X-RapidAPI-Key: {@key}" and "X-RapidAPI-Host: realstonks.p.rapidapi.com"
			clear {%loop-value%::*}
			copy json last http response's body to {%loop-value%::*}
		message "stock prices reloaded" to player

every 30 minutes:
	loop {stocks::*}:
		send a request to "https://realstonks.p.rapidapi.com/%loop-value%" with headers "X-RapidAPI-Key: {@key}" and "X-RapidAPI-Host: realstonks.p.rapidapi.com"
		clear {%loop-value%::*}
		copy json last http response's body to {%loop-value%::*}
	message {@priceUpdateMsg} to all players

command /checkstock <text>:
	trigger:
		stockprice(player)

command /stocks:
	aliases: /stock
	trigger:
		stockprice(player)

command /stockbuy [<text>]:
	trigger:
		set {_t} to arg-1
		stockbuy(player, {_t})

command /wallet:
	trigger:
		stockprice(player)

function stockprice(p: player):
	set metadata tag "stockprice" of {_p} to chest inventory with 3 rows named "§0Stock Prices"
	set slot 0,1,2,3,4,5,6,7,8,9,10,16,17,18,19,20,21,22,23,24,25,26 of metadata "stockprice" of {_p} to gray stained glass pane named ""
	if {AAPL::change_percentage} >= 0:
		set slot 11 of metadata tag "stockprice" of {_p} to creeper banner pattern with all flags hidden named "§eApple§7 (§a+%{AAPL::change_percentage}%%%§7)" with lore "§eTicker - AAPL" and "§7Amount Owned: %{wallet::AAPL::%uuid of {_p}%}?0%" and "§7Price: %{AAPL::price}%" and "§aclick to trade"
	if {AAPL::change_percentage} < 0:
		set slot 11 of metadata tag "stockprice" of {_p} to creeper banner pattern with all flags hidden named "§eApple§7 (§c%{AAPL::change_percentage}%%%§7)" with lore "§eTicker - AAPL" and "§7Amount Owned: %{wallet::AAPL::%uuid of {_p}%}?0%" and "§7Price: %{AAPL::price}%" and "§aclick to trade"
	if {TSLA::change_percentage} >= 0:
		set slot 12 of metadata tag "stockprice" of {_p} to creeper banner pattern with all flags hidden named "§eTesla§7 (§a+%{TSLA::change_percentage}%%%§7)" with lore "§eTicker - TSLA" and "§7Amount Owned: %{wallet::TSLA::%uuid of {_p}%}?0%" and "§7Price: %{TSLA::price}%" and "§aclick to trade"
	if {TSLA::change_percentage} < 0:
		set slot 12 of metadata tag "stockprice" of {_p} to creeper banner pattern with all flags hidden named "§eTesla§7 (§c%{TSLA::change_percentage}%%%§7)" with lore "§eTicker - TSLA" and "§7Amount Owned: %{wallet::TSLA::%uuid of {_p}%}?0%" and "§7Price: %{TSLA::price}%" and "§aclick to trade"
	if {NVDA::change_percentage} >= 0:
		set slot 13 of metadata tag "stockprice" of {_p} to creeper banner pattern with all flags hidden named "§eNvidia§7 (§a+%{NVDA::change_percentage}%%%§7)" with lore "§eTicker - NVDA" and "§7Amount Owned: %{wallet::NVDA::%uuid of {_p}%}?0%" and "§7Price: %{NVDA::price}%" and "§aclick to trade"
	if {NVDA::change_percentage} < 0:
		set slot 13 of metadata tag "stockprice" of {_p} to creeper banner pattern with all flags hidden named "§eNvidia§7 (§c%{NVDA::change_percentage}%%%§7)" with lore "§eTicker - NVDA" and "§7Amount Owned: %{wallet::NVDA::%uuid of {_p}%}?0%" and "§7Price: %{NVDA::price}%" and "§aclick to trade"
	if {AMZN::change_percentage} >= 0:
		set slot 14 of metadata tag "stockprice" of {_p} to creeper banner pattern with all flags hidden named "§eAmazon§7 (§a+%{AMZN::change_percentage}%%%§7)" with lore "§eTicker - AMZN" and "§7Amount Owned: %{wallet::AMZN::%uuid of {_p}%}?0%" and "§7Price: %{AMZN::price}%" and "§aclick to trade"
	if {AMZN::change_percentage} < 0:
		set slot 14 of metadata tag "stockprice" of {_p} to creeper banner pattern with all flags hidden named "§eAmazon§7 (§c%{AMZN::change_percentage}%%%§7)" with lore "§eTicker - AMZN" and "§7Amount Owned: %{wallet::AMZN::%uuid of {_p}%}?0%" and "§7Price: %{AMZN::price}%" and "§aclick to trade"
	if {GOOGL::change_percentage} >= 0:
		set slot 15 of metadata tag "stockprice" of {_p} to creeper banner pattern with all flags hidden named "§eGoogle§7 (§a+%{GOOGL::change_percentage}%%%§7)" with lore "§eTicker - GOOGL" and "§7Amount Owned: %{wallet::GOOGL::%uuid of {_p}%}?0%" and "§7Price: %{GOOGL::price}%" and "§aclick to trade"
	if {GOOGL::change_percentage} < 0:
		set slot 15 of metadata tag "stockprice" of {_p} to creeper banner pattern with all flags hidden named "§eGoogle§7 (§c%{GOOGL::change_percentage}%%%§7)" with lore "§eTicker - GOOGL" and "§7Amount Owned: %{wallet::GOOGL::%uuid of {_p}%}?0%" and "§7Price: %{GOOGL::price}%" and "§aclick to trade"
	open (metadata tag "stockprice" of {_p}) to {_p}

function stockbuy(p: player, t: text):
	if {stocks::*} contains {_t}:
		set {_y} to {%{_t}%::price} * {amount::%uuid of {_p}%}
		set metadata tag "stockbuy" of {_p} to chest inventory with 5 rows named "§8Trading %{_t}%"
		set slot 0,1,2,3,4,5,6,7,8,9,17,18,26,27,35,36,37,38,39,40,41,42,43,44 of metadata tag "stockbuy" of {_p} to gray stained glass pane named "§a"
		set slot 10,11,12,19,28,29,30,21 of metadata tag "stockbuy" of {_p} to red stained glass pane named "§a"
		set slot 14,15,16,23,32,33,34,25 of metadata tag "stockbuy" of {_p} to lime stained glass pane named "§a"
		set slot 20 of metadata tag "stockbuy" of {_p} to chest named "§cSell §f[Checkout§f]"
		set slot 24 of metadata tag "stockbuy" of {_p} to chest named "§aBuy §f[Checkout§f]"
		set slot 13 of metadata tag "stockbuy" of {_p} to skull of ("MHF_ArrowUp" parsed as an offline player) named "&f[&a+1.0&f]" with lore "&8&oClick to add to your cart" and "&ePrice: &a+$%{%{_t}%::price}%"
		set slot 31 of metadata tag "stockbuy" of {_p} to skull of ("MHF_ArrowDown" parsed as an offline player) named "&f[&c&l-1.0&f]" with lore "&8&oClick to remove from your cart" and "&ePrice: &c-$%{%{_t}%::price}%"
		set slot 22 of metadata tag "stockbuy" of {_p} to iron nugget named "&f[&a&lCart&f]" with lore "&eStock: &7%{_t}%" and "&eAmount In Cart: &7%{amount::%uuid of {_p}%}?0%" and "&ePrice: &7$%{_y}%"
		open (metadata tag "stockbuy" of {_p}) to {_p}
	else:
		message "Must choose a ticker" to {_p}
		message "Do /stocks to see all stocks/tickers" to {_p}

on inventory click:
	if event-inventory = (metadata tag "stockprice" of player):
		cancel event
		if index of event-slot is 11:
			stockbuy(player, "AAPL")
		if index of event-slot is 12:
			stockbuy(player, "TSLA")
		if index of event-slot is 13:
			stockbuy(player, "NVDA")
		if index of event-slot is 14:
			stockbuy(player, "AMZN")
		if index of event-slot is 15:
			stockbuy(player, "GOOGL")
	if event-inventory = (metadata tag "stockbuy" of player):
		cancel event
		if index of event-slot is 13:
			loop {stocks::*}:
				if inventory name of current inventory of player = "§8Trading %loop-value%":
					add 1 to {amount::%uuid of player%}
					set {_y} to {%loop-value%::price} * {amount::%uuid of player%}
					set slot 22 of metadata tag "stockbuy" of player to iron nugget named "&f[&a&lCart&f]" with lore "&eStock: &7%loop-value%" and "&eAmount In Cart: &7%{amount::%uuid of player%}?0%" and "&ePrice: &7$%{_y}%"
		if index of event-slot is 31:
			loop {stocks::*}:
				if inventory name of current inventory of player = "§8Trading %loop-value%":
					remove 1 from {amount::%uuid of player%}
					if {amount::%uuid of player%} < 0:
						set {amount::%uuid of player%} to 0
					set {_y} to {%loop-value%::price} * {amount::%uuid of player%}
					set slot 22 of metadata tag "stockbuy" of player to iron nugget named "&f[&a&lCart&f]" with lore "&eStock: &7%loop-value%" and "&eAmount In Cart: &7%{amount::%uuid of player%}?0%" and "&ePrice: &7$%{_y}%"
		if index of event-slot is 24:
			loop {stocks::*}:
				if inventory name of current inventory of player = "§8Trading %loop-value%":
					set {_y} to {%loop-value%::price} * {amount::%uuid of player%}
					if {eco::money::p::%uuid of player%} >= {_y}:
						remove {_y} from {eco::money::p::%uuid of player%}
						add {amount::%uuid of player%} to {wallet::%loop-value%::%uuid of player%}
						message {@BuyStockMsg} to player
						close player's inventory
					else:
						close player's inventory
						message {@insufficentBal} to player
		if index of event-slot is 20:
			loop {stocks::*}:
				if inventory name of current inventory of player = "§8Trading %loop-value%":
					set {_y} to {%loop-value%::price} * {amount::%uuid of player%}
					if {wallet::%loop-value%::%uuid of player%} >= {amount::%uuid of player%}:
						add {_y} to {eco::money::p::%uuid of player%}
						remove {amount::%uuid of player%} from {wallet::%loop-value%::%uuid of player%}
						message {@SellStockMsg} to player
						close player's inventory
					else:
						close player's inventory
						message {@insufficentStock} to player
on inventory close:
	set {amount::%uuid of player%} to 0

# eco section, this is where u change the type of eco, or delete it entirely if u already have eco, but then make sure to change the skript to match it

command /eco [<text>] [<offline player>] [<int>]:
	permission: *
	trigger:
		send "&f/eco &e<give&c|&etake&c|&ereset&c|&eset> <offline player> <amount>" if arg 1 is not set
		arg 1 is set
		send "&cYou need to specify a player" if arg 2 is not offline player
		arg 2 is offline player
		delete {eco::money::p::%arg 2's uuid%} if arg 1 is "reset"
		send "&6Your balance was set to &a$%{eco::money::p::%arg 2's uuid%} ? 0%" to arg 2 if arg 1 is "reset"
		send "&6You set %arg 2's displayname%&6's balance to &a$%{eco::money::p::%arg 2's uuid%} ? 0%" if arg 1 is "reset"
		stop if arg 1 is "reset"
		send "&cYou need to specify an amount" if arg 3 is not an integer
		arg 3 is an integer
		add arg 3 to {eco::money::p::%arg 2's uuid%} if arg 1 is "give"
		send "&a$%arg 3%&6 has been added to your balance" to arg 2 if arg 1 is "give"
		send "&a$%arg 3%&6 added to %arg 2's displayname%&6's balance. New balance is &a$%{eco::money::p::%arg 2's uuid%} ? 0%" if arg 1 is "give"
		remove arg 3 from {eco::money::p::%arg 2's uuid%} if arg 1 is "take"
		send "&a$%arg 3%&6 has been removed from your balance" to arg 2 if arg 1 is "take"
		send "&a$%arg 3%&6 removed from %arg 2's displayname%&6's balance. New balance is &a$%{eco::money::p::%arg 2's uuid%} ? 0%" if arg 1 is "take"
		set {eco::money::p::%arg 2's uuid%} to arg 3 if arg 1 is "set"
		send "&6Your balance was set to &a$%{eco::money::p::%arg 2's uuid%} ? 0%" to arg 2 if arg 1 is "set"
		send "&6You set %arg 2's displayname%&6's balance to &a$%{eco::money::p::%arg 2's uuid%} ? 0%" if arg 1 is "set"

command /economy [<text>] [<offline player>] [<int>]:
	permission: *
	trigger:
		send "&f/eco &e<give&c|&etake&c|&ereset&c|&eset> <offline player> <amount>" if arg 1 is not set
		arg 1 is set
		send "&cYou need to specify a player" if arg 2 is not offline player
		arg 2 is offline player
		delete {eco::money::p::%arg 2's uuid%} if arg 1 is "reset"
		send "&6Your balance was set to &a$%{eco::money::p::%arg 2's uuid%} ? 0%" to arg 2 if arg 1 is "reset"
		send "&6You set %arg 2's displayname%&6's balance to &a$%{eco::money::p::%arg 2's uuid%} ? 0%" if arg 1 is "reset"
		stop if arg 1 is "reset"
		send "&cYou need to specify an amount" if arg 3 is not an integer
		arg 3 is an integer
		add arg 3 to {eco::money::p::%arg 2's uuid%} if arg 1 is "give"
		send "&a$%arg 3%&6 has been added to your balance" to arg 2 if arg 1 is "give"
		send "&a$%arg 3%&6 added to %arg 2's displayname%&6's balance. New balance is &a$%{eco::money::p::%arg 2's uuid%} ? 0%" if arg 1 is "give"
		remove arg 3 from {eco::money::p::%arg 2's uuid%} if arg 1 is "take"
		send "&a$%arg 3%&6 has been removed from your balance" to arg 2 if arg 1 is "take"
		send "&a$%arg 3%&6 removed from %arg 2's displayname%&6's balance. New balance is &a$%{eco::money::p::%arg 2's uuid%} ? 0%" if arg 1 is "take"
		set {eco::money::p::%arg 2's uuid%} to arg 3 if arg 1 is "set"
		send "&6Your balance was set to &a$%{eco::money::p::%arg 2's uuid%} ? 0%" to arg 2 if arg 1 is "set"
		send "&6You set %arg 2's displayname%&6's balance to &a$%{eco::money::p::%arg 2's uuid%} ? 0%" if arg 1 is "set"

on tab complete of "eco" or "economy":
	set tab completions for position 1 to "give", "take", "reset", "set"

command /pay [<offline player>] [<int>]:
	trigger:
		send "&f/pay &e<offline player> <amount>" if arg 1 is not offline player
		arg 1 is offline player
		send "&cYou can not send to yourself" if arg 1 is player
		arg 1 is not player
		send "&f/pay &e%arg 1% &e<amount>" if arg 2 is not an integer
		arg 2 is an integer
		send "&cYou can only send if the value is greater than 0" if arg 2 <= 0
		arg 2 > 0
		send "&cYou dont have that much! try a smaller amount" if {eco::money::p::%player's uuid%} ? 0 < arg 2
		{eco::money::p::%player's uuid%} ? 0 >= arg 2
		remove arg 2 from {eco::money::p::%player's uuid%}
		add arg 2 to {eco::money::p::%arg 1's uuid%}
		send "&a$%arg 2% &6has been sent to %arg 1's displayname%"
		send "&a$%arg 2% &6has been received from %player's displayname%" to arg 1
		play sound "block.anvil.destroy" with volume 0.2 with pitch 100 to player
		play sound "block.anvil.use" with volume 0.2 with pitch 100 to arg 1

command /bal [<offline player>]:
	trigger:
		send "&7&l%arg 1% &7&lBalance: &a$%{eco::money::p::%arg 1's uuid%} ? 0%" if arg 1 is offline player
		send "&7&lBalance: &a$%{eco::money::p::%player's uuid%} ? 0%" if arg 1 is not offline player

command /balance [<offline player>]:
	trigger:
		send "&7&l%arg 1% &7&lBalance: &a$%{eco::money::p::%arg 1's uuid%} ? 0%" if arg 1 is offline player
		send "&7&lBalance: &a$%{eco::money::p::%player's uuid%} ? 0%" if arg 1 is not offline player

command /baltop:
	trigger:
		BalanceTop(player)

command /balancetop:
	trigger:
		BalanceTop(player)

function BalanceTop(p: player):
	set {_money::*} to sorted indices of {eco::money::p::*} in descending order
	send "&2&lTop Balance" to {_p}
	loop 10 times:
		send "&a%loop-value%&a. &2%{_money::%loop-value%} parsed as offline player ? "&7No Data"% &7- &a$%{eco::money::p::%{_money::%loop-value%}%} ? "&7No Data"%" to {_p}
